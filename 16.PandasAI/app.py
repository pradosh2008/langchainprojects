# Import Libraries
import os
from dotenv import load_dotenv
import pandas as pd
import streamlit as st
from streamlit_extras.add_vertical_space import add_vertical_space
from pandasai import PandasAI
from pandasai import SmartDataframe
from pandasai.middlewares import StreamlitMiddleware
from pandasai.llm import OpenAI

dir_path = os.getcwd()

# API Key retrieval
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

st.set_page_config(page_title="Data Analysis Tool", page_icon="üîß")

# Sidebar contents
with st.sidebar:
    st.title('Pandas-AI üêº')
    st.markdown('''
    ## About
    This app is a data analysis tool created using:
    - ### [Streamlit](https://streamlit.io/)
    - ### [Pandas](https://pandas.pydata.org/docs/)
    - ### [PandasAI](https://github.com/gventuri/pandas-ai)
    - ### [OpenAI LLM model](https://platform.openai.com/docs/models)
    ''')
    add_vertical_space(17)
    st.write('Made with ‚ù§Ô∏è by [Jayesh_Ironside](https://github.com/jayeshironside)')

# Front-end and Back-end starts here
st.title("Prompt-driven analysis tool üîß")

uploaded_file = st.file_uploader("Upload a CSV file for analysis", type=['csv'])

try:
    if uploaded_file is not None:
        data = pd.read_csv(uploaded_file, encoding='Latin-1')
        df = SmartDataframe(data, {"middlewares": [StreamlitMiddleware()]})
        st.table(data.head(5))
        st.write("Rows x Column :", df.shape)
    else:
        st.error("Upload CSV")
except Exception as data_load_error:
    st.exception(f"An error occurred while loading the CSV data: {data_load_error}")

prompt = st.chat_input("Enter your prompt here...")

try:
    if prompt:
        with st.spinner("Generating your response..."):
            llm = OpenAI(api_token=OPENAI_API_KEY)
            pandas_ai = PandasAI(llm, save_charts=True, save_charts_path=dir_path)
            output = pandas_ai.run(df, prompt=prompt)
            if isinstance(prompt, str) and any(word in prompt.lower() for word in ["chart", "graph", "image","fig","figure","image","img", "Plot"]):
                image_path = "./exports/charts/temp_chart.png"
                st.image(image_path, caption='Generated by AI', use_column_width=True, output_format="PNG")
            else:
                st.write(output)
except Exception as analysis_error:
    st.exception(f"An error occurred during analysis: {analysis_error}")
